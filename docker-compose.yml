services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - client
      - service-core
      - service-finance
      - service-events

  redis:
    image: redis:latest
    container_name: my-redis-container
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:16
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d core" ]
      interval: 10s
      timeout: 5s
      retries: 5

  service-core:
    build:
      context: .
      dockerfile: ./apps/service-core/Dockerfile
    env_file:
      - ./apps/service-core/.env.production.local
    ports:
      - '9000:9000'
    depends_on:
      - redis
      - rabbitmq
      - postgres
    volumes:
      - ./apps/service-core/src:/app/apps/service-core/src

  service-finance:
    build:
      context: .
      dockerfile: ./apps/service-finance/Dockerfile
    env_file:
      - ./apps/service-finance/.env.production.local
    ports:
      - '9002:9002'
    depends_on:
      - redis
      - rabbitmq
      - postgres
    volumes:
      - ./apps/service-finance/src:/app/apps/service-finance/src

  service-events:
    build:
      context: .
      dockerfile: ./apps/service-events/Dockerfile
    env_file:
      - ./apps/service-events/.env.production.local
    ports:
      - '9001:9001'
    depends_on:
      - redis
      - rabbitmq
      - postgres
    volumes:
      - ./apps/service-events/src:/app/apps/service-events/src

  client-web:
    build:
      context: ./apps/client-web
      dockerfile: Dockerfile
    env_file:
      - ./apps/client-web/.env.production.local
    ports:
      - "3000:80"
    volumes:
      - ./apps/client-web/src:/app/src

  mqtt-broker:
    image: eclipse-mosquitto:2
    container_name: mosquitto
    ports:
      - "1883:1883"   # MQTT (unsecured)
      - "9001:9001"   # WebSocket (optional)
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log

volumes:
  redis_data:
  rabbitmq_data:
  postgres_data:
